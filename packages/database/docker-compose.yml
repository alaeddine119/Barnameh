version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: barnameh_postgres
    environment:
      POSTGRES_DB: barnameh_ops
      POSTGRES_USER: barnameh_user
      POSTGRES_PASSWORD: barnameh_password
      # Performance tuning for development
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_MAX_CONNECTIONS: 100
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./seed_data.sql:/docker-entrypoint-initdb.d/02-seed_data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U barnameh_user -d barnameh_ops"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: pgAdmin for database management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: barnameh_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@barnameh.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

  # Optional: Redis for caching ML predictions
  redis:
    image: redis:7-alpine
    container_name: barnameh_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: barnameh_network
